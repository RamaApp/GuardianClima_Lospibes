from auth import register_user, login_user
from clima import consultar_clima
from historial import ver_historial, HISTORIAL_CSV
from estadisticas import mostrar_estadisticas
from ia import obtener_consejo

from utils import box, error
from errores import APIKeyMissingError, CiudadNoEncontradaError, ConexionClimaError, ConexionIAError

import csv
from datetime import datetime

def mostrar_menu_acceso():
    print()
    box("=== GUARDI√ÅNCLIMA ITBA ===")
    print()
    print("1) Iniciar Sesi√≥n")
    print()
    print("2) Registrar Usuario")
    print()
    print("3) Salir")
    print()

def mostrar_menu_principal(username: str):
    print()
    box(f"¬°Hola, {username}!")
    print()
    print("1) Consultar clima y guardar en historial")
    print()
    print("2) Ver historial personal")
    print()
    print("3) Ver estad√≠sticas globales")
    print()
    print("4) Obtener consejo de vestimenta (IA)")
    print()
    print("5) Acerca de‚Ä¶")
    print()
    print("6) Cerrar sesi√≥n")
    print()

def mostrar_acerca_de():
    print()
    box("ACERCA DE GUARDI√ÅNCLIMA ITBA")
    print()
    print("Aplicaci√≥n de consola en Python para consultar clima,")
    print("guardar historial, generar estad√≠sticas y consejos con IA.")
    print()
    print("üõ† M√≥dulos internos:")
    print(" ‚Ä¢ auth.py: simulaci√≥n de usuarios y validaci√≥n de contrase√±as.")
    print(" ‚Ä¢ clima.py: consumo de OpenWeatherMap y normalizaci√≥n de datos.")
    print(" ‚Ä¢ historial.py y estadisticas.py: gesti√≥n y an√°lisis de CSV.")
    print(" ‚Ä¢ ia.py: integraci√≥n con Google Gemini para consejos.")
    print()
    print("‚ö†Ô∏è Simulaci√≥n insegura: las contrase√±as se guardan en texto plano.")
    print("En entornos reales, usar hashing (bcrypt, Argon2, etc.).")
    print()
    print("üë• Desarrolladores: Ramiro Appezzato, Maximo Acconcia, Bautista Chiarella, Emiliano Fandi√±o, Agustin Godoy")
    print("üè∑ Nombre de grupo: Equipo 104 GuardianClima ITBA")
    print()

def main():
    usuario_actual = ""
    while True:
        if not usuario_actual:
            mostrar_menu_acceso()
            opcion = input("Elige una opci√≥n: ").strip()

            if opcion == "1":
                usuario_actual = login_user()

            elif opcion == "2":
                nuevo = register_user()
                if nuevo:
                    usuario_actual = nuevo

            elif opcion == "3":
                print()
                box("¬°Hasta pronto!")
                break

            else:
                print("Opci√≥n inv√°lida.")

        else:
            mostrar_menu_principal(usuario_actual)
            opcion = input("Elige una opci√≥n: ").strip()

            if opcion == "1":
                try:
                    ciudad, temp, cond, hum, viento = consultar_clima(usuario_actual)
                except (APIKeyMissingError, CiudadNoEncontradaError, ConexionClimaError) as e:
                    error(str(e))
                    continue
                # ‚Äî Guardar en historial global ‚Äî
                with open(HISTORIAL_CSV, "a", newline="", encoding="utf-8") as f:
                    writer = csv.writer(f)
                    writer.writerow([
                        usuario_actual,
                        ciudad,
                        datetime.now().isoformat(sep=" "),
                        temp,
                        cond,
                        hum,
                        viento
                    ])

            elif opcion == "2":
                ver_historial(usuario_actual)

            elif opcion == "3":
                mostrar_estadisticas()

            elif opcion == "4":
                try:
                    ciudad, temp, cond, hum, viento = consultar_clima(usuario_actual)
                except (APIKeyMissingError, CiudadNoEncontradaError, ConexionClimaError) as e:
                    error(str(e))
                    continue
                try:
                    consejo = obtener_consejo(ciudad, temp, cond)
                except ConexionIAError as e:
                    error(str(e))
                    continue
                print()
                box("Consejo de vestimenta:")
                print(consejo)
                print()

            elif opcion == "5":
                mostrar_acerca_de()

            elif opcion == "6":
                print()
                box(f"Cerrando sesi√≥n de {usuario_actual}")
                usuario_actual = ""

            else:
                print("Opci√≥n inv√°lida.")

if __name__ == "__main__":
    main()
